<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.costmgn.costmgnsrv.mapper.ContractMapper">
    <resultMap id="BaseResultMap" type="com.costmgn.costmgnsrv.entity.Contract">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="contract_no" jdbcType="VARCHAR" property="contractNo"/>
        <result column="contract_date" jdbcType="DATE" property="contractDate"/>
        <result column="money" jdbcType="DECIMAL" property="money"/>
        <result column="pay_method" jdbcType="VARCHAR" property="payMethod"/>
        <result column="pay_request" jdbcType="VARCHAR" property="payRequest"/>
        <result column="company" jdbcType="VARCHAR" property="company"/>
        <result column="legal_person" jdbcType="VARCHAR" property="legalPerson"/>
        <result column="last_month" jdbcType="INTEGER" property="lastMonth"/>
        <result column="plan_id" jdbcType="INTEGER" property="planId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <association
                column="work_id"
                select="com.costmgn.costmgnsrv.mapper.WorkMapper.selectByPrimaryKey"
                property="work"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, contract_no, contract_date, money, pay_method, pay_request, company, legal_person, 
    last_month, plan_id, title, description, work_id
  </sql>
    <select id="selectByExample" parameterType="com.costmgn.costmgnsrv.entity.ContractExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from contract
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from contract
        where id = #{id,jdbcType=INTEGER}
    </select>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.costmgn.costmgnsrv.entity.Contract"
            useGeneratedKeys="true">
    insert into contract (contract_no, contract_date, money, 
      pay_method, pay_request, company, 
      legal_person, last_month, plan_id, 
      title, description, work_id
      )
    values (#{contractNo,jdbcType=VARCHAR}, #{contractDate,jdbcType=DATE}, #{money,jdbcType=DECIMAL},
            #{payMethod,jdbcType=VARCHAR}, #{payRequest,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR},
            #{legalPerson,jdbcType=VARCHAR}, #{lastMonth,jdbcType=INTEGER}, #{planId,jdbcType=INTEGER},
            #{title,jdbcType=VARCHAR},
            #{description,jdbcType=VARCHAR},
            #{work.id,jdbcType=INTEGER}
      )
  </insert>
    <select id="countByExample" parameterType="com.costmgn.costmgnsrv.entity.ContractExample"
            resultType="java.lang.Long">
        select count(*) from contract
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectByIds" parameterType="List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from contract
        where id in #{ids}
    </select>
    <update id="updateByExample" parameterType="map">
        update contract
        set id = #{record.id,jdbcType=INTEGER},
        contract_no = #{record.contractNo,jdbcType=VARCHAR},
        contract_date = #{record.contractDate,jdbcType=DATE},
        money = #{record.money,jdbcType=DECIMAL},
        pay_method = #{record.payMethod,jdbcType=VARCHAR},
        pay_request = #{record.payRequest,jdbcType=VARCHAR},
        company = #{record.company,jdbcType=VARCHAR},
        legal_person = #{record.legalPerson,jdbcType=VARCHAR},
        last_month = #{record.lastMonth,jdbcType=INTEGER},
        plan_id = #{record.planId,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        work_id = #{record.work.id,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKey" parameterType="com.costmgn.costmgnsrv.entity.Contract">
    update contract
    set contract_no   = #{contractNo,jdbcType=VARCHAR},
        contract_date = #{contractDate,jdbcType=DATE},
        money         = #{money,jdbcType=DECIMAL},
        pay_method    = #{payMethod,jdbcType=VARCHAR},
        pay_request   = #{payRequest,jdbcType=VARCHAR},
        company       = #{company,jdbcType=VARCHAR},
        legal_person  = #{legalPerson,jdbcType=VARCHAR},
        last_month    = #{lastMonth,jdbcType=INTEGER},
        plan_id       = #{planId,jdbcType=INTEGER},
        title         = #{title,jdbcType=VARCHAR},
        description   = #{description,jdbcType=VARCHAR},
        work_id       = #{work.id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>